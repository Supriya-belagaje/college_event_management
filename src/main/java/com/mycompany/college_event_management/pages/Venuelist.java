/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.college_event_management.pages;

import com.mycompany.college_event_management.Utils.ParticipantTableModel;
import com.mycompany.college_event_management.Utils.VenueTableModel;
import com.mycompany.college_event_management.database.tables.Venue;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
//import java.util.Model;

/**
 *
 * @author supru
 */
public class Venuelist extends javax.swing.JFrame {
private List<String> items = new ArrayList<>();
    /**
     * Creates new form Venuelist
     */
    public Venuelist() {
        initComponents();
                setExtendedState(JFrame.MAXIMIZED_BOTH);

        fetchvenue();
    }
    
    private void fetchvenue(){
        var Allvenue = Venue.getAllVenue();
        System.err.println("allParticipants" + Allvenue.size());
        //Table
        VenueTableModel model = new VenueTableModel(Allvenue);
        venuetab.setModel(model);
        
        //Pannel with delete
//        for (Venue p : Allvenue) {
//          items.add(p.Name);
//        }
        refreshItemList();
    }
    private void refreshItemList() {
        venuelist.removeAll();

        for (String item : items) {
            JPanel itemPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
            JLabel itemLabel = new JLabel(item);
            JButton deleteButton = new JButton("Delete");
            deleteButton.addActionListener((ActionEvent e) -> {
                items.remove(item);
                refreshItemList();
                // Revalidate and repaint to ensure UI updates are displayed
                venuelist.revalidate();
                venuelist.repaint();
            });

            itemPanel.add(itemLabel);
            itemPanel.add(deleteButton);
            venuelist.add(itemPanel);
            System.out.println("added "+ item);
        }

        // In case the list is empty, show a message
        if (items.isEmpty()) {
            venuelist.add(new JLabel("No items available."));
        }
    }
    private void clearVenueInputFields() {
    // Clear the venue-related text fields
    venueid.setText("");
    venue_name.setText("");
    capacity.setText("");
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        venue_name = new javax.swing.JTextField();
        capacity = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        venuetab = new javax.swing.JTable();
        add = new javax.swing.JButton();
        back = new javax.swing.JButton();
        venuelist = new javax.swing.JPanel();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        venueid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Venue");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 111, -1));

        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 40, -1));

        jLabel3.setText("Capacity");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        venue_name.setText("venue_name");
        venue_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venue_nameActionPerformed(evt);
            }
        });
        getContentPane().add(venue_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 90, -1));

        capacity.setText("capacity");
        capacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capacityActionPerformed(evt);
            }
        });
        getContentPane().add(capacity, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        venuetab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        venuetab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                venuetabMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(venuetab);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        add.setText("Add");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        back.setText("back");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 510, -1, -1));
        jPanel1.add(venuelist, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        venueid.setText("venue_id");
        jPanel1.add(venueid, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1610, 1100));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        admin_home home = new admin_home();
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        // TODO add your handling code here:
String venueText = capacity.getText();
try {
    int cap = Integer.parseInt(venueText);
    Venue ven = new Venue(0, venue_name.getText(), cap);
    Venue.insertvenue(ven);
    
    // Display success message dialog
    JOptionPane.showMessageDialog(this, "Venue added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    
} catch (NumberFormatException e) {
    // Handle the case where the venue text is not a valid integer
    JOptionPane.showMessageDialog(this, "Capacity must be a valid integer", "Error", JOptionPane.ERROR_MESSAGE);
    // Optionally, you can clear the venue text field or take other corrective actions
    capacity.setText(""); // Clear the venue text field
    
    // Print the stack trace for debugging purposes
    e.printStackTrace();
}

      
    }//GEN-LAST:event_addMouseClicked

    private void venue_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venue_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_venue_nameActionPerformed

    private void capacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capacityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_capacityActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = venuetab.getSelectedRow();

    // Check if any row is selected
    if (selectedRowIndex != -1) {
        // Assuming the venue ID is stored in the first column of the table
        int venueIdToDelete = (int) venuetab.getValueAt(selectedRowIndex, 0);
        int confirmDialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Venue?", "Confirmation", JOptionPane.YES_NO_OPTION);
    
    // Check user's choice
    if (confirmDialogResult == JOptionPane.YES_OPTION){

        // Attempt to delete the venue
        boolean deletionSuccessful = Venue.deleteVenue(venueIdToDelete);
    
        // Display appropriate message based on deletion result
        if (deletionSuccessful) {
            JOptionPane.showMessageDialog(null, "Venue deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Optionally, refresh the table to reflect the changes
        } else {
            JOptionPane.showMessageDialog(null, "Failed to delete venue. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        // If no row is selected, display an error message
        JOptionPane.showMessageDialog(null, "Please select a venue to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        int venueId = Integer.parseInt(venueid.getText());
    String venueName = venue_name.getText();
    int cap = Integer.parseInt(capacity.getText());

    // Create a new Venue object with updated data
    Venue updatedVenue = new Venue(venueId, venueName, cap);

    // Update the venue in the database
    boolean updateSuccessful = Venue.updateVenue(updatedVenue);

    // Display appropriate message to the user
    if (updateSuccessful) {
        JOptionPane.showMessageDialog(this, "Venue updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        // Optionally, you can clear the input fields or take other actions
    } else {
        JOptionPane.showMessageDialog(this, "Failed to update venue. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_updateActionPerformed

    private void venuetabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venuetabMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = venuetab.getSelectedRow();
if (selectedRowIndex != -1) {
    int venueId = (int) venuetab.getValueAt(selectedRowIndex, 0);
    String venueName = (String) venuetab.getValueAt(selectedRowIndex, 1);
    int Capacity = (int) venuetab.getValueAt(selectedRowIndex, 2);

    venueid.setText(String.valueOf(venueId));
    venue_name.setText(venueName);
    capacity.setText(String.valueOf(capacity));
} else {
    // Clear text fields if no row is selected
    clearVenueInputFields();
}

    }//GEN-LAST:event_venuetabMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Venuelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Venuelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Venuelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Venuelist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Venuelist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JTextField capacity;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton update;
    private javax.swing.JTextField venue_name;
    private javax.swing.JTextField venueid;
    private javax.swing.JPanel venuelist;
    private javax.swing.JTable venuetab;
    // End of variables declaration//GEN-END:variables
}
